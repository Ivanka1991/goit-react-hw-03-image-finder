{"version":3,"sources":["components/services/picture-api.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Searchbar/Searchbar.js","components/Loader/Loader.js","components/App.js","index.js"],"names":["api","fetchPicture","requestKey","page","url","fetch","then","response","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","event","currentTarget","target","window","addEventListener","this","removeEventListener","src","alt","createPortal","className","onClick","Component","ImageGalleryItem","state","showModal","toggleModal","setState","largeImageUrl","ImageGallery","images","map","image","webformatURL","tags","largeImageURL","id","Button","type","Searchbar","handleRequestChange","value","toLowerCase","handleSubmit","preventDefault","trim","onSubmit","toast","autoComplete","autoFocus","placeholder","onChange","Spinner","color","height","width","timeout","Status","App","error","status","handleFormSubmit","newRequestKey","prevState","hits","catch","finally","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.72635b8e.chunk.js","sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '21938669-8165db93b483567670733df94';\r\n\r\n\r\nfunction fetchPicture (requestKey, page) {\r\n\r\n    const url = `${BASE_URL}?image_type=photo&orientation=horizontal&q=${requestKey}&page=${page}&per_page=12&key=${API_KEY}`;\r\n    return fetch(url).then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        return Promise.reject(new Error('No response from server'));\r\n      });\r\n}\r\nconst api = { fetchPicture };\r\n\r\nexport default api;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown)\r\n  }\r\nhandleKeyDown = e => {\r\n  if  (e.code === 'Escape') {\r\n    this.props.onClose();\r\n }\r\n}\r\nhandleBackdropClick = event => {\r\n   if (event.currentTarget === event.target) {\r\n     this.props.onClose();\r\n   }\r\n}\r\n render () {\r\n   const { src, alt} =this.props;\r\n\r\n   return createPortal (\r\n<div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n  <div className=\"Modal\">\r\n    <img \r\n    src={ src } \r\n    alt={ alt } \r\n    />\r\n  </div>\r\n</div>,\r\nmodalRoot,\r\n   );\r\n }\r\n}\r\n\r\nexport default Modal;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Modal from '../Modal/Modal'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ImageGalleryItem extends Component {\r\nstate ={\r\n  showModal: false\r\n}\r\n\r\nstatic propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  largeImageUrl: PropTypes.string.isRequired,\r\n};\r\n\r\ntoggleModal = () => {\r\n  this.setState(({showModal}) =>({\r\n    showModal: !showModal,\r\n  }))\r\n}\r\n\r\n\r\nrender (){\r\nconst { src, alt, largeImageUrl } = this.props;\r\nconst { showModal } = this.state;\r\nreturn(\r\n  <li className=\"ImageGalleryItem\">\r\n  \r\n  <img\r\n  onClick={ this.toggleModal } \r\n  src={src} \r\n  alt={alt} \r\n  className=\"ImageGalleryItem-image\" \r\n  />\r\n  {showModal && (\r\n    <Modal \r\n    onClose = {this.toggleModal} \r\n    src = {largeImageUrl} \r\n    alt = {alt} />\r\n  )}\r\n\r\n</li>\r\n\r\n  )}\r\n}\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction ImageGallery ({ images }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n  {images.map((image) => (\r\n    <ImageGalleryItem\r\n    src = {image.webformatURL}\r\n    alt = {image.tags}\r\n    largeImageUrl = {image.largeImageURL}\r\n    key = {image.id}\r\n    />\r\n  ))}\r\n</ul>\r\n  )\r\n}\r\n\r\nImageGallery.propTypes ={\r\n  images: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ImageGallery;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Button extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n      <button \r\n      onClick={this.props.onClick} \r\n      className=\"Button\" \r\n      type=\"button\">\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: 'smooth',\r\n  }); */","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    requestKey: '',\r\n  }\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n     handleRequestChange = event => {\r\n       this.setState({requestKey: event.currentTarget.value.toLowerCase() });\r\n     };\r\n     \r\n      handleSubmit = event => {\r\n        event.preventDefault();\r\n         \r\n        if (this.state.requestKey.trim () === '') {\r\n          toast('Enter your query!');\r\n          return;\r\n        }\r\n        this.props.onSubmit(this.state.requestKey);\r\n        this.setState({ requestKey: '' });\r\n      }\r\n       render() {\r\n         return (\r\n<header className=\"Searchbar\">\r\n  <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n    <button type=\"submit\" className=\"SearchForm-button\">\r\n      <span className=\"SearchForm-button-label\">Search</span>\r\n    </button>\r\n\r\n    <input\r\n      className=\"SearchForm-input\"\r\n      type=\"text\"\r\n      autoComplete=\"off\"\r\n      autoFocus\r\n      placeholder=\"Search images and photos\"\r\n      value={this.state.requestKey}\r\n      onChange={this.handleRequestChange}\r\n    />\r\n  </form>\r\n</header>\r\n         )\r\n       }\r\n     }\r\n\r\nexport default Searchbar;","import React, { Component } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n      type=\"TailSpin\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spinner;","import React, {Component} from 'react';\r\nimport '../index.css'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport api from './services/picture-api';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\nimport Button from './Button/Button';\r\nimport Searchbar from './Searchbar/Searchbar';\r\nimport Spinner from './Loader/Loader';\r\n\r\nconst Status = {\r\n    IDLE: 'idle',\r\n    PENDING: 'pending',\r\n    RESOLVED: 'resolved',\r\n    REJECTED: 'rejected',\r\n  };\r\n  \r\n  class App extends Component {\r\n    state = {\r\n      error: null,\r\n      status: 'idle',\r\n      requestKey: '',\r\n      page: 1,\r\n      images: [],\r\n    };\r\n\r\n      handleFormSubmit = newRequestKey => {\r\n        this.setState({ requestKey: newRequestKey, page: 1, images: [] });\r\n      };\r\n    \r\n      componentDidUpdate(prevProps, prevState) {\r\n        const prevName = prevState.requestKey;\r\n        const nextName = this.state.requestKey;\r\n    \r\n        if (prevName !== nextName) {\r\n            this.setState({ status: Status.PENDING });\r\n          this.fetchPicture();\r\n           }\r\n           if (\r\n            prevState.page !== this.state.page &&\r\n            this.state.page > 2\r\n          ) {\r\n            window.scrollTo({\r\n              top: document.documentElement.scrollHeight,\r\n              behavior: 'smooth',\r\n            });\r\n          }\r\n      }\r\n    \r\n      fetchPicture = () => {\r\n        const { requestKey, page } = this.state;\r\n    \r\n        api\r\n          .fetchPicture(requestKey, page)\r\n          .then(response =>\r\n            this.setState(prevState => ({\r\n              images: [...prevState.images, ...response.hits],\r\n              page: prevState.page + 1,\r\n            })),\r\n          )\r\n          .catch(error => this.setState({ error, status: Status.REJECTED }))\r\n          .finally(() => this.setState({ status: Status.RESOLVED }));\r\n      };\r\n    \r\n      render() {\r\n        const { status } = this.state;\r\n    \r\n        return (\r\n          <>\r\n            <Searchbar onSubmit={this.handleFormSubmit}></Searchbar>\r\n            <ToastContainer autoClose={3000} />\r\n            {status === Status.IDLE && (\r\n              <p className=\"welcomeText\">Please enter your search term</p>\r\n            )}\r\n    \r\n            {status === Status.PENDING && <Spinner/>}\r\n    \r\n            {status === Status.RESOLVED && (\r\n              <>\r\n                <ImageGallery images={this.state.images} />\r\n                <Button onClick={this.fetchPicture} />\r\n              </>\r\n            )}\r\n          </>\r\n        );\r\n      }\r\n    }\r\n    \r\n    export default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}